name: 2. Configure And Create Projects
on:
  workflow_dispatch:
    inputs:
      PROJECT_CODE:
        description: 'Project Code: (Example: demo)'
        required: true
        default: ""
        type: text

jobs: 
#  call-workflow-passing-data:
#    name: 'Calling the external workflows to configure and create the project'
#    uses: ES-BAR-MEV/IDM-IAC-DYNAMIC-EPHEMERAL-${{ github.event.inputs.PROJECT_CODE }}-k8s/.github/workflows/called-workflow.yml@main
#    with:
#      PROJECT_CODE: ${{ github.event.inputs.PROJECT_CODE }}

#  call-workflow-passing-data:
#    runs-on: ubuntu-latest
#    container:
#      env:
#        repo: github.event.inputs.PROJECT_CODE
#    steps:
#      - name: Call action
#        uses: ES-BAR-MEV/IDM-IAC-DYNAMIC-EPHEMERAL-${{ env.repo }}-k8s/.github/workflows/called-workflow.yml@main

  prepare:
    runs-on: ubuntu-latest
    env:
      DYNAMIC_WORKFLOW: .github/workflows/dynamic.yml
    steps:
    - name: Setup dynamic workflow
      uses: actions/github-script@v6
      with:
        script: |
          const path = require('path');
          const fs = require('fs/promises');
          const workflow = {
            name: "Dynamic workflow",
            on: {
              workflow_call: {}
            },
            jobs: {
              actual-deploy: {
                uses: "octocat/pipelines/.github/workflows/customer-deploy.yaml@${{ github.event.inputs.PROJECT_CODE }}",
                with: {
                  environment_name: "${{ github.ref_name }}",
                  repository_name: "${{ github.repository }}",
                  repository_ref_name: "${{ github.ref_name }}",
                  repository_commit_hash: "${{ github.sha }}"
                },
                secrets: "inherit"
              }
            }
          };
          await fs.writeFile(${{ env.DYNAMIC_WORKFLOW }}, JSON.stringify(workflow));

  deploy:
    needs: prepare
    uses: ".github/workflows/dynamic.yml"
    secrets: inherit
