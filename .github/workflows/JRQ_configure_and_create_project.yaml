name: Configur/Create JRQ
on:
  workflow_dispatch:
    inputs:
      KEYCLOAK_ARGOCD_CLIENT_SECRET:
        description: 'Keycloak ArgoCD client secret'
        required: true
        default: ""
        type: text
      CREATE_MSSQL_DB:
        description: 'Do you want to create a MSSql service and a default database? If yes, provide a value in the next DB admin field'
        required: true
        default: false
        type: boolean
      DB_ADMIN_PWD:
        description: 'DB admin password'
        required: false
        default: ""
        type: text

jobs:
  format_prj_coode:
    outputs:
      prj_code_lower: ${{ steps.var.outputs.prj_code_lower}}
      prj_code_upper: ${{ steps.var.outputs.prj_code_upper}}
    runs-on: "ubuntu-latest"
    steps:
      - name: Setting prj code to lower
        uses: actions/github-script@v6
        id: var
        with:
          script: |
            core.setOutput('prj_code_lower', 'JRQ'.toLowerCase().replaceAll(/[/.]/g, '-').trim('-'));
            core.setOutput('prj_code_upper', 'JRQ'.toUpperCase().replaceAll(/[/.]/g, '-').trim('-'));    
            

  check-if-configured:
    needs: [format_prj_coode]
    name: Check if project configuration is done
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.early.conclusion }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Checking params/JRQ_params.env file existence
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files:  'params/JRQ_params.env'
      - name: Configuration is done
        if: steps.check_files.outputs.files_exists != 'true'
        run: |
          echo "THE CONFIGURATION FILE JRQ_params.env DOES NOT EXISTS, PLEASE CONFIGURE IT"
          exit 1

  load-env-vars:
    needs: [format_prj_coode, check-if-configured]
    name: 'Load env vars'
    runs-on: ubuntu-latest
    outputs:
      thefile: ${{ steps.prueba.outputs.mivalor }}
    env:
      PROJECT_CODE_LOWERCASE: ${{ needs.format_prj_coode.outputs.prj_code_lower }}
      PROJECT_CODE_UPPERCASE: ${{ needs.format_prj_coode.outputs.prj_code_upper }}
    steps:
    - uses: actions/checkout@v4
    - name: Load from file
      uses: cardinalby/export-env-action@v1
      with:
        envFile: 'params/${{ env.PROJECT_CODE_UPPERCASE}}_params.env'
        expand: 'true'
    - name: Check noExport result
      id: prueba
      run: |
        echo "env.PROJECT_CODE: '${{env.PROJECT_CODE}}'" 
        echo "env.VNET_SUPERNET: '${{env.VNET_SUPERNET}}'" 
        echo "env.SUBNETS_COMMON_IP: '${{env.SUBNETS_COMMON_IP}}'" 
        echo "env.SUBNETS_APPGW_IP: '${{env.SUBNETS_APPGW_IP}}'" 
        echo "env.SUBNETS_APPGW_PRIVATE_IP_ADDRESS: '${{env.SUBNETS_APPGW_PRIVATE_IP_ADDRESS}}'" 
        echo "env.SUBNETS_AKS_NODE_IP: '${{env.SUBNETS_AKS_NODE_IP}}'" 
        echo "env.NSGS_APPGW_DESTINATION_ADDRESS_PREFIX: '${{env.NSGS_APPGW_DESTINATION_ADDRESS_PREFIX}}'" 
        echo "env.APPGW_LISTENERS_WILDCARD_BACKENDSIPS: '${{env.APPGW_LISTENERS_WILDCARD_BACKENDSIPS}}'" 
        echo "env.LOAD_BALANCER_IP: '${{env.LOAD_BALANCER_IP}}'" 
        echo "env.KEYCLOAK_ARGOCD_CLIENT_SECRET: '${{env.KEYCLOAK_ARGOCD_CLIENT_SECRET}}'" 
        echo "env.CREATE_MSSQL_DB: '${{env.CREATE_MSSQL_DB}}'" 
        echo "env.DB_ADMIN_PWD: '${{env.DB_ADMIN_PWD}}'" 
        echo "mivalor=${{env.PROJECT_CODE}}" >> $GITHUB_OUTPUT

  call-workflow-base:
    needs: [load-env-vars]
    name: 'Calling the external BASE workflow to configure and create the project'
    uses: ES-BAR-MEV/IDM-IAC-DYNAMIC-EPHEMERAL-JRQ-base/.github/workflows/mandatory-project-configuration.yaml@main
    with:
      PROJECT_CODE: ${{needs.load-env-vars.steps.prueba.outputs.thefile}}
      VNET_SUPERNET: ${{needs.load-env-vars.steps.prueba.outputs.thefile}}
      SUBNETS_COMMON_IP: ${{needs.load-env-vars.steps.prueba.outputs.thefile}}


