name: Configur/Create JRQ
on:
  workflow_dispatch:
    inputs:
      KEYCLOAK_ARGOCD_CLIENT_SECRET:
        description: 'Keycloak ArgoCD client secret'
        required: true
        default: ""
        type: text
      CREATE_MSSQL_DB:
        description: 'Do you want to create a MSSql service and a default database? If yes, provide a value in the next DB admin field'
        required: true
        default: false
        type: boolean
      DB_ADMIN_PWD:
        description: 'DB admin password'
        required: false
        default: ""
        type: text

jobs:
  format_prj_coode:
    outputs:
      prj_code_lower: ${{ steps.var.outputs.prj_code_lower}}
      prj_code_upper: ${{ steps.var.outputs.prj_code_upper}}
    runs-on: "ubuntu-latest"
    steps:
      - name: Setting prj code to lower
        uses: actions/github-script@v6
        id: var
        with:
          script: |
            core.setOutput('prj_code_lower', 'JRQ'.toLowerCase().replaceAll(/[/.]/g, '-').trim('-'));
            core.setOutput('prj_code_upper', 'JRQ'.toUpperCase().replaceAll(/[/.]/g, '-').trim('-'));    
  
  check-if-configured:
    needs: [format_prj_coode]
    name: Check if project configuration is done
    runs-on: ubuntu-latest
    outputs:
      status: ${{ steps.early.conclusion }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Checking params/JRQ_params.env file existence
        id: check_files
        uses: andstor/file-existence-action@v3
        with:
          files:  'params/JRQ_params.env'
      - name: Configuration is done
        if: steps.check_files.outputs.files_exists != 'true'
        run: |
          echo "THE CONFIGURATION FILE JRQ_params.env DOES NOT EXISTS, PLEASE CONFIGURE IT"
          exit 1

  load-env-vars:
    needs: [check-if-configured,format_prj_coode]
    name: 'Load env vars'
    runs-on: ubuntu-latest
#    outputs:
#      env_PROJECT_CODE: ${{ steps.export_var.outputs.env_PROJECT_CODE }}
#      env_VNET_SUPERNET: ${{ steps.export_var.outputs.env_VNET_SUPERNET }}
#      env_SUBNETS_COMMON_IP: ${{ steps.export_var.outputs.env_SUBNETS_COMMON_IP }}
#      env_SUBNETS_APPGW_IP: ${{ steps.export_var.outputs.env_SUBNETS_APPGW_IP }}
#      env_SUBNETS_APPGW_PRIVATE_IP_ADDRESS: ${{ steps.export_var.outputs.env_SUBNETS_APPGW_PRIVATE_IP_ADDRESS }}
#      env_SUBNETS_AKS_NODE_IP: ${{ steps.export_var.outputs.env_SUBNETS_AKS_NODE_IP }}
#      env_NSGS_APPGW_DESTINATION_ADDRESS_PREFIX: ${{ steps.export_var.outputs.env_NSGS_APPGW_DESTINATION_ADDRESS_PREFIX }}
#      env_APPGW_LISTENERS_WILDCARD_BACKENDSIPS: ${{ steps.export_var.outputs.env_APPGW_LISTENERS_WILDCARD_BACKENDSIPS }}
#      env_LOAD_BALANCER_IP: ${{ steps.export_var.outputs.env_LOAD_BALANCER_IP }}
#      env_KEYCLOAK_ARGOCD_CLIENT_SECRET: ${{ steps.export_var.outputs.env_KEYCLOAK_ARGOCD_CLIENT_SECRET }}
#      env_CREATE_MSSQL_DB: ${{ steps.export_var.outputs.env_CREATE_MSSQL_DB }}
#      env_env_DB_ADMIN_PWD: ${{ steps.export_var.outputs.env_DB_ADMIN_PWD }}
    env:
      PROJECT_CODE_LOWERCASE: ${{ needs.format_prj_coode.outputs.prj_code_lower }}
      PROJECT_CODE_UPPERCASE: ${{ needs.format_prj_coode.outputs.prj_code_upper }}
    steps:
    - uses: actions/checkout@v4
    - name: Load from file
      uses: cardinalby/export-env-action@v1
      with:
        envFile: 'params/${{ env.PROJECT_CODE_UPPERCASE}}_params.env'
        expand: 'true'
    - name: Check values
      run: |
        echo "env.PROJECT_CODE: '${{env.PROJECT_CODE}}'" 
        echo "env.VNET_SUPERNET: '${{env.VNET_SUPERNET}}'" 
        echo "env.SUBNETS_COMMON_IP: '${{env.SUBNETS_COMMON_IP}}'" 
        echo "env.SUBNETS_APPGW_IP: '${{env.SUBNETS_APPGW_IP}}'" 
        echo "env.SUBNETS_APPGW_PRIVATE_IP_ADDRESS: '${{env.SUBNETS_APPGW_PRIVATE_IP_ADDRESS}}'" 
        echo "env.SUBNETS_AKS_NODE_IP: '${{env.SUBNETS_AKS_NODE_IP}}'" 
        echo "env.NSGS_APPGW_DESTINATION_ADDRESS_PREFIX: '${{env.NSGS_APPGW_DESTINATION_ADDRESS_PREFIX}}'" 
        echo "env.APPGW_LISTENERS_WILDCARD_BACKENDSIPS: '${{env.APPGW_LISTENERS_WILDCARD_BACKENDSIPS}}'" 
        echo "env.LOAD_BALANCER_IP: '${{env.LOAD_BALANCER_IP}}'" 
        echo "env.KEYCLOAK_ARGOCD_CLIENT_SECRET: '${{env.KEYCLOAK_ARGOCD_CLIENT_SECRET}}'" 
        echo "env.CREATE_MSSQL_DB: '${{env.CREATE_MSSQL_DB}}'" 
        echo "env.DB_ADMIN_PWD: '${{env.DB_ADMIN_PWD}}'"
     
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        repository: ES-BAR-MEV/IDM-IAC-DYNAMIC-EPHEMERAL-JRQ-base
        token: ${{ secrets.DYNAMICEPHEMERAL_WORKFLOW_TOKEN }}
    - name: Inject variables
      run: |
        sed -i "s#VAR_TEMPLATE_PROJECT_CODE_LOWERCASE#${{ env.PROJECT_CODE_LOWERCASE}}#g" backend_config.hcl
        sed -i "s#VAR_TEMPLATE_PROJECT_CODE_LOWERCASE#${{ env.PROJECT_CODE_LOWERCASE}}#g" terraform.tfvars.json
        sed -i "s#VAR_TEMPLATE_VNET_SUPERNET#${{ env.VNET_SUPERNET }}#g" terraform.tfvars.json
        sed -i "s#VAR_TEMPLATE_SUBNETS_COMMON_IP#${{ env.SUBNETS_COMMON_IP }}#g" terraform.tfvars.json

#    - name: Commit and push changes
#      run: |
#        git config --global user.name "Configure Project"
#        git config --global user.email "configure.project@atos.net"
#        git add -A
#        git commit -m "VARIABLE REPLACAMENT BY MANDATORY PROJECT CONFIGURATION PIPELINE"
#        git push

    - name: update file and push to remote
      run: |
        echo "CONFIGURATION APPLIED. DO NOT DELETE THIS FILE" >> cfg-applied.txt
        git config --global user.name "Configure Project"
        git config --global user.email "configure.project@atos.net"
        git add -A
        git commit -m "Confirmation of project configuration"
        git push

  push_run_creation_workflow_file:
    needs: [load-env-vars]
    name: 'Create and push the file run_creation_workflow'
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository code
      uses: actions/checkout@v4
      with:
        repository: ES-BAR-MEV/IDM-IAC-DYNAMIC-EPHEMERAL-JRQ-base
        token: ${{ secrets.DYNAMICEPHEMERAL_WORKFLOW_TOKEN }}
    - name: Create file run_creation_workflow.txt
      run: |
        echo "THIS REPO HAS BEEN CALLED FROM SHUTTLE WORKFLOW. DO NOT DELETE IT" >> Create file run_creation_workflow.txt
        git config --global user.name "Configure Project"
        git config --global user.email "configure.project@atos.net"
        git add -A
        git commit -m "Confirmation of project configuration"
        git push

