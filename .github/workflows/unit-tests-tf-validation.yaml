name: 'Unit Tests Terraform validation'

on:
  push:

jobs:
  terraform-unit-tests:
    name: 'Terraform Unit Tests'
    runs-on: self-hosted

    steps:
    # Checkout the repository to the GitHub Actions runner      
    - name: Check out repository code
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_wrapper: false
      #   terraform_version: 1.4.2

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Inject variables
      run: |
        sed -i 's#VAR_ACCESSKEY#${{ secrets.AZURE_WORKPLACE_TFSTATE_ACCESSKEY }}#g' backend_config.hcl
    - name: Terraform Init
      id: init
      run: |
        terraform init -backend-config backend_config.hcl -upgrade

    # Validate terraform files
    - name: Terraform Validate
      id: validate
      run: |
        terraform validate -no-color

    # Checks that all Terraform configuration files adhere to a canonical format
#    - name: Terraform Format
#      id: fmt
#      run: terraform fmt -check -recursive -diff

    # Perform a security scan of the terraform code using checkov
    - name: Run Checkov action
      id: checkov
      uses: bridgecrewio/checkov-action@master
      with: 
        framework: terraform
      continue-on-error: true
